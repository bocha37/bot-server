from flask import Flask, request, jsonify
import requests
import os

app = Flask(__name__)

# === –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è ===
BOT_TOKEN = os.getenv("BOT_TOKEN")
ADMIN_ID = os.getenv("ADMIN_ID")

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–ø—Ä–æ—Å–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ===
@app.route('/question', methods=['POST'])
def handle_question():
    data = request.json
    question = data.get('question')
    user_id = data.get('user_id') or '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'

    if not question:
        return jsonify({"error": "–í–æ–ø—Ä–æ—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º"}), 400

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–æ–ø—Ä–æ—Å –∞–¥–º–∏–Ω—É
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage" 
    text = f"üì© –í–æ–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}:\n\n{question}"

    try:
        response = requests.post(url, json={"chat_id": ADMIN_ID, "text": text})
        return jsonify({"status": "ok", "response": response.json()})
    except Exception as e:
        return jsonify({"status": "error", "error": str(e)}), 500

# === –û—Ç–≤–µ—Ç –∞–¥–º–∏–Ω–∞ —á–µ—Ä–µ–∑ Telegram ===
@app.route('/answer', methods=['POST'])
def answer_to_user():
    data = request.json
    user_id = data.get('user_id')
    answer_text = data.get('answer')

    if not user_id or not answer_text:
        return jsonify({"error": "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏"}), 400

    url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage" 
    payload = {
        "chat_id": user_id,
        "text": f"üí¨ –û—Ç–≤–µ—Ç –æ—Ç —ç–∫—Å–ø–µ—Ä—Ç–∞:\n{answer_text}"
    }

    try:
        response = requests.post(url, json=payload)
        return jsonify({"status": "ok"})
    except Exception as e:
        return jsonify({"status": "error", "message": str(e)})